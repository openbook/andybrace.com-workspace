{"version":3,"sources":["webpack:///./src/pages/about.mdx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///../packages/gatsby-theme-andybrace/src/components/Layout/index.js","webpack:///../packages/gatsby-theme-andybrace/src/components/Grid/index.js","webpack:///../packages/gatsby-theme-andybrace/src/components/GridCol/index.js","webpack:///../packages/gatsby-theme-andybrace/src/components/HeaderLinks/index.js","webpack:///../packages/gatsby-theme-andybrace/src/components/Header/index.js","webpack:///../packages/gatsby-theme-andybrace/src/components/Heading/index.js","webpack:///../packages/gatsby-theme-andybrace/src/components/Navbar/index.js","webpack:///../packages/gatsby-theme-andybrace/src/components/ProjectsContainer/index.js","webpack:///../packages/gatsby-theme-andybrace/src/components/ProjectSummary/index.js","webpack:///../packages/gatsby-theme-andybrace/src/components/ReadMore/index.js","webpack:///../packages/gatsby-theme-andybrace/src/components/Section/index.js","webpack:///../packages/gatsby-theme-andybrace/src/components/SkillList/index.js","webpack:///../packages/gatsby-theme-andybrace/src/components/SEO/index.js","webpack:///../packages/gatsby-theme-andybrace/src/components/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["layoutProps","MDXContent","props","_this","_React$Component","call","this","layout","DefaultLayout","render","_this$props","components","objectWithoutPropertiesLoose_default","react_default","a","createElement","dist","name","Layout","Object","assign","src_components","tag","className","text","React","Component","isMDXComponent","_frontmatter","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","data","query","children","propTypes","PropTypes","object","string","isRequired","func","react__WEBPACK_IMPORTED_MODULE_1___default","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_2__","_reach_router__WEBPACK_IMPORTED_MODULE_4__","_ref","location","_index__WEBPACK_IMPORTED_MODULE_3__","id","Grid","GridCol","HeaderLinks","_this$props$links","links","github","email","linkedIn","href","Header","gatsby_browser_entry","siteMetaQuery","_data$site$siteMetada","site","siteMetadata","title","description","role","components_HeaderLinks","_2649330470","Heading","Tag","type","dangerouslySetInnerHTML","__html","Navbar","es","to","pathname","ProjectsContainer","number","allMdx","_4245512079","limit","totalCount","components_Grid","edges","slice","map","item","components_GridCol","key","node","components_ProjectSummary","image","frontmatter","childImageSharp","fluid","slug","fields","defaultProps","ProjectSummary","gatsby_image_default","ReadMore","path","SkillList","_38663781","skills","splice","skill","Fragment","label","contents","SEO","locationTitle","lang","meta","keywords","_2373366630","titleTemplate","pageTitle","metaDescription","Helmet_default","htmlAttributes","content","property","author","concat","length","join","arrayOf","components_Header","components_Heading","components_ProjectsContainer","Section","components_SkillList","components_SEO","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","shape"],"mappings":"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","file":"component---src-pages-about-mdx-4e6dd24cf7ee7dc07929.js","sourcesContent":["import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n\n\n  import DefaultLayout from \"/buddy/openbook-github-io/workspaces/packages/gatsby-theme-andybrace/src/components/Layout/index.js\";\nimport { Section, Heading } from 'gatsby-theme-andybrace';\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n\n      <MDXTag name=\"h1\" components={components}>{`About me`}</MDXTag>\n      <Section>\n    <Heading tag='h2' className='subheading h5' text='Ways of working' />\n    <Heading tag='h3' className='subheading h6' text='Scope' />\n    <p>Before any project starts it important to conduct a technical discovery.  Technical discoveries identify team capabilities and constraints. With this information you can understand how to achieve a project.  I do this by conducting interviews with technical stakeholders and desk research.</p> \n    <Heading tag='h3' className='subheading h6' text='Plan' />\n    <p>I plan projects around user stories.  I'm used to creating, reviewing and expanding on user stories within product backlogs.  There are many tools that help to do that, i'm most used to JIRA and Trello.</p>\n    <Heading tag='h3' className='subheading h6' text='Prototype' />\n    <Heading tag='h3' className='subheading h6' text='Deliver' />\n    <p>I enjoy working in cross functional teams, and especially those working in 'sprints'.  Quick delivery cycles means collaboration is important.  I'm happy [coding in the open](https://gds.blog.gov.uk/2017/09/04/the-benefits-of-coding-in-the-open/), and getting / giving feedback via code review.  I use tools like Docker, Github to help collaboration.</p>\n      </Section>\n      <Section>\n    <Heading tag='h2' className='subheading h5' text='Tech radar' />\n    Text coming soon...\n      </Section>\n           </MDXTag>;\n  }\n\n}\nMDXContent.isMDXComponent = true;\nexport const _frontmatter = {};\n      ","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react'\nimport { MDXProvider } from '@mdx-js/tag';\nimport { Header, Navbar, SEO } from '../index'\nimport { Location } from '@reach/router'\n\nclass Layout extends React.Component {\n  render() {\n    const { children } = this.props\n\n    return (\n      <MDXProvider>\n        <Location>\n          {({ location }) => <SEO location={location}/>}\n        </Location>\n        <Header />\n        <div id='main'>\n          <Navbar />\n          {children}\n        </div>\n      </MDXProvider>\n    )\n  }\n}\n\nexport default Layout","import React from 'react'\n\nconst Grid = props => {\n\n  return (\n    <div className={`columns ${props.className && props.className || null}`}>\n      {props.children}\n    </div>\n  )\n}\n\nexport default Grid\n","import React from 'react'\n\nconst GridCol = props => {\n\n  return (\n    <div className={`column ${props.className && props.className || null}`}>\n      {props.children}\n    </div>\n  )\n}\n\nexport default GridCol\n","import React from 'react'\n\nclass HeaderLinks extends React.Component {\n  render() {\n    const { github, email, linkedIn } = this.props.links\n    return (\n      <div id=\"footer\">\n        <div className=\"inner\">\n          <ul className={'list-inline--spaced mx-0 px-0'}>\n            <li className={'list-inline-item'}>\n              <a href={github} className={'link link--icon'}>\n                <i className='icon icon--github' />\n                <span className={'sr-only'}>Github</span>\n              </a>\n            </li>\n            <li className={'list-inline-item'}>\n              <a href={linkedIn} className={'link link--icon'}>\n                <i className='icon icon--linkedin' />\n                <span className={'sr-only'}>LinkedIn</span>\n              </a>\n            </li>\n            <li className={'list-inline-item'}>\n              <a href={`mailto:${email}`}>\n                {email}\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default HeaderLinks","import React from 'react'\nimport HeaderLinks from '../HeaderLinks';\nimport { StaticQuery, graphql } from \"gatsby\"\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <StaticQuery\n        query={siteMetaQuery}\n        render={data => {\n          const { title, description, links, role } = data.site.siteMetadata;\n          return (\n            <header id=\"header\" className=\"blue\">\n              <div className=\"inner col-ml-auto\">\n                <h1 className='site-title'>{title}</h1>\n                <h2>{role}</h2>\n                <p>{description}</p>\n                <HeaderLinks links={links} />\n              </div>\n            </header>\n          )\n        }}\n        />\n    )\n  }\n}\n\nconst siteMetaQuery = graphql`\n  query SiteMetaQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        role\n        links {\n          github\n          email\n          linkedIn \n        }\n      }\n    }\n  }\n`\n\nexport default Header\n","import React from 'react'\n\nconst Heading = props => {\n  const Tag = `${props.type || 'h2'}`\n  return (\n    <Tag className={` ${props.className} spacing-bottom--sm`} id={props.id || null} dangerouslySetInnerHTML={{__html: props.text}}></Tag>\n  )\n}\n\nexport default Heading\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { Location } from '@reach/router';\n\nexport default () => (\n  <Location>\n    {({location}) => (\n      <nav className={'navbar'}>\n        <section className=\"navbar-section\">\n          <Link to={'/'} className={`navbar-item ${location.pathname === '/' ? 'active' : null}`}>Home</Link>\n          <Link to={'/about'} className={`navbar-item ${location.pathname === '/about' ? 'active' : null}`}>About</Link>\n          <Link to={'/projects'} className={`navbar-item ${location.pathname === '/projects' ? 'active' : null}`}>Projects</Link>\n        </section>\n      </nav>\n    )}\n  </Location>\n)\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useStaticQuery, graphql} from \"gatsby\";\nimport { Grid, GridCol, ProjectSummary } from \"../\";\n\nconst ProjectsContainer = ({ number }) => {\n  const { allMdx } = useStaticQuery(\n    graphql`\n      query {\n        allMdx(\n          sort: { \n            fields: [frontmatter___date], \n            order: DESC \n          }\n        ) {\n          totalCount\n          edges {\n            node {\n              id\n              frontmatter {\n                title\n                date(formatString: \"DD MMMM, YYYY\")\n                image {\n                 childImageSharp {\n                   fluid(maxWidth: 300, quality: 100) {\n                      ...GatsbyImageSharpFluid\n                   }\n                 }\n               }\n              }\n              fields {\n                slug\n              }\n              excerpt\n            }\n          }\n        }\n      }\n    `\n  );\n\n  let limit = (number === 0) ? allMdx.totalCount : number;\n\n  return (\n    <Grid>\n      { allMdx.edges.slice(0, limit).map(item => (\n        <GridCol className={'col-6 col-sm-12 spacing-bottom--sm'} key={`grid-${item.node.id}`}>\n          <ProjectSummary\n            image={item.node.frontmatter.image ? item.node.frontmatter.image.childImageSharp.fluid : null}\n            title={item.node.frontmatter.title}\n            slug={item.node.fields.slug}\n            key={item.node.id}\n          />\n        </GridCol>\n        )\n      )}\n    </Grid>\n  )\n}\n\nProjectsContainer.defaultProps = {\n  number: 0\n}\n\nProjectsContainer.propTypes = {\n  number: PropTypes.number,\n}\n\nexport default ProjectsContainer;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nconst ProjectSummary = ({image, title, slug}) => {\n  return (\n    <Link to={slug}>\n      {image && <Img fluid={image} />}\n      {!image && <h5>{title}</h5>}\n    </Link>\n)\n}\n\nexport default ProjectSummary;","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nexport default ({path}) => (\n  <p className={'ta-r spacing-top--sm'}>\n    <Link to={path}>read more</Link>\n  </p>\n)","import React from 'react';\n\nconst Grid = props => (\n  <section className={`${props.className ? props.className : 'spacing-bottom--lg'}`}>\n    {props.children}\n  </section>\n);\n\nexport default Grid;\n","import React from 'react';\nimport { Grid, GridCol } from '../';\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nconst SkillList = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            skills {\n              label\n              contents\n            }\n          }\n        }\n      }\n    `\n  );\n  return (\n    <Grid>\n      <GridCol className='col-6 col-sm-12'>\n        <dl>\n          { site.siteMetadata.skills.splice(0,3).map(skill => (\n            <React.Fragment key={skill.label}>\n              <dt><strong>{skill.label}</strong></dt>\n              <dd>{skill.contents}</dd>\n            </React.Fragment>\n            )\n          )}\n        </dl>\n      </GridCol>\n      <GridCol className='col-6 col-sm-12'>\n        <dl>\n          { site.siteMetadata.skills.map(skill => (\n              <React.Fragment key={skill.label}>\n                <dt><strong>{skill.label}</strong></dt>\n                <dd>{skill.contents}</dd>\n              </React.Fragment>\n            )\n          )}\n        </dl>\n      </GridCol>\n    </Grid>\n  );\n}\n\nexport default SkillList;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst SEO = ({ description, lang, meta, keywords, title, location }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            role\n          }\n        }\n      }\n    `\n  );\n\n  let locationTitle;\n  let titleTemplate = `%s | ${site.siteMetadata.title}`;\n\n  switch (location.pathname) {\n    case \"/about\":\n      locationTitle = 'About me';\n      break;\n    case \"/projects\":\n      locationTitle = 'Projects';\n      break;\n    case \"/\":\n      locationTitle = `${site.siteMetadata.title} - ${site.siteMetadata.role}`;\n      titleTemplate = `%s `;\n      break;\n    default:\n      locationTitle = 'Page not found'\n  }\n\n  let pageTitle = title || locationTitle;\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={pageTitle}\n      titleTemplate={titleTemplate}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string,\n}\n\nexport default SEO\n","/* @flow */\n\nimport Grid from './Grid';\nimport GridCol from './GridCol';\nimport Header from './Header';\nimport Heading from './Heading';\nimport Layout from './Layout';\nimport Navbar from './Navbar';\nimport ProjectsContainer from './ProjectsContainer';\nimport ProjectSummary from './ProjectSummary';\nimport ReadMore from './ReadMore';\nimport Section from './Section';\nimport SkillList from './SkillList';\nimport SEO from './SEO';\n\nexport {\n  Grid,\n  GridCol,\n  Header,\n  Heading,\n  Layout,\n  Navbar,\n  ProjectsContainer,\n  ProjectSummary,\n  ReadMore,\n  Section,\n  SkillList,\n  SEO\n};\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}